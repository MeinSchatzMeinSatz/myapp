스코프

[스코프란?]

스코프는 변수, 그리고 함수와 깊은 관련이 있다.

함수의 매개변수는 함수 몸체 내부에서만 참조할 수 있고, 함수 몸체 외부에서는 참조할 수 없다.
이때, 매개변수를 참조할 수 있는 스코프(유효범위)가 함수 몸체 내부로 한정되기 때문이다.

변수는 코드의 가장 바깥 영역뿐 아니라 코드 블록이나 함수 모체 내에서도 선언할 수 있다.
변수는 자신이 선언된 위치에 의해 자신이 유효한 범위, 즉 다른 코다가 변수 자신을 참조할 수 있는 범위가 결정된다.
이는 변수 뿐만 아니라 모든 식별자가 그러하다.

=> 스코프란 자바스크립트 엔진이 식별자를 검색할 때 사용하는 규칙이라고 할 수 있다.

만약 스코프라는 개념이 없다면, 같은 이름을 갖는 변수는 충돌을 일으키므로 프로그램 전체에서 하나밖에 사용할 수 없다.

[스코프의 종류]
전역스코프, 지역스코프

전역 - 전역 변수는 어디서든지 참조할 수 있다.
지역 - 이때 지역이 함수 몸체 내부를 말한다.
지역에 변수를 선언하면 지역스코프를 갖는 지역 변수가 된다.
지역 변수는 자신의 지역 스코프와 하위 지역 스코프에서 유효하다.

함수 레벨 스코프

함수 레벨 스코프란, 코드 블록이 아닌 함수에 의해서만 지역 스코프가 생성된다는 의미.
var 키워드로 선언된 변수는 오로지 함수의 코드 블록(함수 몸체)만을 지역 스코프로 인정한다.

이를 함수 레벨 스코프라고 한다.




자바스크립트는 렉시컬 스코프를 따르므로 함수를 어디서 호출했는지가 아니라 함수를 어디서 정의했는지에 따라 상위 스코프를 결정한다. 즉, 함수의 상위 스코프는 언제나 자신이 정의된 스코프다.